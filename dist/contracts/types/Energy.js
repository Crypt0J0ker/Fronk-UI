"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
//# sourceMappingURL=data:application/json;base64,{"version":3,"file":"Energy.js","sourceRoot":"","sources":["../../../src/contracts/types/Energy.ts"],"names":[],"mappings":"","sourcesContent":["/* Autogenerated file. Do not edit manually. */\r\n/* tslint:disable */\r\n/* eslint-disable */\r\nimport type {\r\n  BaseContract,\r\n  BigNumberish,\r\n  BytesLike,\r\n  FunctionFragment,\r\n  Result,\r\n  Interface,\r\n  EventFragment,\r\n  AddressLike,\r\n  ContractRunner,\r\n  ContractMethod,\r\n  Listener,\r\n} from \"ethers\";\r\nimport type {\r\n  TypedContractEvent,\r\n  TypedDeferredTopicFilter,\r\n  TypedEventLog,\r\n  TypedLogDescription,\r\n  TypedListener,\r\n  TypedContractMethod,\r\n} from \"./common\";\r\n\r\nexport interface EnergyInterface extends Interface {\r\n  getFunction(\r\n    nameOrSignature:\r\n      | \"DEFAULT_ADMIN_ROLE\"\r\n      | \"allowance\"\r\n      | \"approve\"\r\n      | \"balanceOf\"\r\n      | \"burn\"\r\n      | \"decimals\"\r\n      | \"decreaseAllowance\"\r\n      | \"getRoleAdmin\"\r\n      | \"grantRole\"\r\n      | \"hasRole\"\r\n      | \"increaseAllowance\"\r\n      | \"mint\"\r\n      | \"name\"\r\n      | \"renounceRole\"\r\n      | \"revokeRole\"\r\n      | \"supportsInterface\"\r\n      | \"symbol\"\r\n      | \"totalSupply\"\r\n      | \"transfer\"\r\n      | \"transferFrom\"\r\n  ): FunctionFragment;\r\n\r\n  getEvent(\r\n    nameOrSignatureOrTopic:\r\n      | \"Approval\"\r\n      | \"RoleAdminChanged\"\r\n      | \"RoleGranted\"\r\n      | \"RoleRevoked\"\r\n      | \"Transfer\"\r\n  ): EventFragment;\r\n\r\n  encodeFunctionData(\r\n    functionFragment: \"DEFAULT_ADMIN_ROLE\",\r\n    values?: undefined\r\n  ): string;\r\n  encodeFunctionData(\r\n    functionFragment: \"allowance\",\r\n    values: [AddressLike, AddressLike]\r\n  ): string;\r\n  encodeFunctionData(\r\n    functionFragment: \"approve\",\r\n    values: [AddressLike, BigNumberish]\r\n  ): string;\r\n  encodeFunctionData(\r\n    functionFragment: \"balanceOf\",\r\n    values: [AddressLike]\r\n  ): string;\r\n  encodeFunctionData(\r\n    functionFragment: \"burn\",\r\n    values: [AddressLike, BigNumberish]\r\n  ): string;\r\n  encodeFunctionData(functionFragment: \"decimals\", values?: undefined): string;\r\n  encodeFunctionData(\r\n    functionFragment: \"decreaseAllowance\",\r\n    values: [AddressLike, BigNumberish]\r\n  ): string;\r\n  encodeFunctionData(\r\n    functionFragment: \"getRoleAdmin\",\r\n    values: [BytesLike]\r\n  ): string;\r\n  encodeFunctionData(\r\n    functionFragment: \"grantRole\",\r\n    values: [BytesLike, AddressLike]\r\n  ): string;\r\n  encodeFunctionData(\r\n    functionFragment: \"hasRole\",\r\n    values: [BytesLike, AddressLike]\r\n  ): string;\r\n  encodeFunctionData(\r\n    functionFragment: \"increaseAllowance\",\r\n    values: [AddressLike, BigNumberish]\r\n  ): string;\r\n  encodeFunctionData(\r\n    functionFragment: \"mint\",\r\n    values: [AddressLike, BigNumberish]\r\n  ): string;\r\n  encodeFunctionData(functionFragment: \"name\", values?: undefined): string;\r\n  encodeFunctionData(\r\n    functionFragment: \"renounceRole\",\r\n    values: [BytesLike, AddressLike]\r\n  ): string;\r\n  encodeFunctionData(\r\n    functionFragment: \"revokeRole\",\r\n    values: [BytesLike, AddressLike]\r\n  ): string;\r\n  encodeFunctionData(\r\n    functionFragment: \"supportsInterface\",\r\n    values: [BytesLike]\r\n  ): string;\r\n  encodeFunctionData(functionFragment: \"symbol\", values?: undefined): string;\r\n  encodeFunctionData(\r\n    functionFragment: \"totalSupply\",\r\n    values?: undefined\r\n  ): string;\r\n  encodeFunctionData(\r\n    functionFragment: \"transfer\",\r\n    values: [AddressLike, BigNumberish]\r\n  ): string;\r\n  encodeFunctionData(\r\n    functionFragment: \"transferFrom\",\r\n    values: [AddressLike, AddressLike, BigNumberish]\r\n  ): string;\r\n\r\n  decodeFunctionResult(\r\n    functionFragment: \"DEFAULT_ADMIN_ROLE\",\r\n    data: BytesLike\r\n  ): Result;\r\n  decodeFunctionResult(functionFragment: \"allowance\", data: BytesLike): Result;\r\n  decodeFunctionResult(functionFragment: \"approve\", data: BytesLike): Result;\r\n  decodeFunctionResult(functionFragment: \"balanceOf\", data: BytesLike): Result;\r\n  decodeFunctionResult(functionFragment: \"burn\", data: BytesLike): Result;\r\n  decodeFunctionResult(functionFragment: \"decimals\", data: BytesLike): Result;\r\n  decodeFunctionResult(\r\n    functionFragment: \"decreaseAllowance\",\r\n    data: BytesLike\r\n  ): Result;\r\n  decodeFunctionResult(\r\n    functionFragment: \"getRoleAdmin\",\r\n    data: BytesLike\r\n  ): Result;\r\n  decodeFunctionResult(functionFragment: \"grantRole\", data: BytesLike): Result;\r\n  decodeFunctionResult(functionFragment: \"hasRole\", data: BytesLike): Result;\r\n  decodeFunctionResult(\r\n    functionFragment: \"increaseAllowance\",\r\n    data: BytesLike\r\n  ): Result;\r\n  decodeFunctionResult(functionFragment: \"mint\", data: BytesLike): Result;\r\n  decodeFunctionResult(functionFragment: \"name\", data: BytesLike): Result;\r\n  decodeFunctionResult(\r\n    functionFragment: \"renounceRole\",\r\n    data: BytesLike\r\n  ): Result;\r\n  decodeFunctionResult(functionFragment: \"revokeRole\", data: BytesLike): Result;\r\n  decodeFunctionResult(\r\n    functionFragment: \"supportsInterface\",\r\n    data: BytesLike\r\n  ): Result;\r\n  decodeFunctionResult(functionFragment: \"symbol\", data: BytesLike): Result;\r\n  decodeFunctionResult(\r\n    functionFragment: \"totalSupply\",\r\n    data: BytesLike\r\n  ): Result;\r\n  decodeFunctionResult(functionFragment: \"transfer\", data: BytesLike): Result;\r\n  decodeFunctionResult(\r\n    functionFragment: \"transferFrom\",\r\n    data: BytesLike\r\n  ): Result;\r\n}\r\n\r\nexport namespace ApprovalEvent {\r\n  export type InputTuple = [\r\n    owner: AddressLike,\r\n    spender: AddressLike,\r\n    value: BigNumberish\r\n  ];\r\n  export type OutputTuple = [owner: string, spender: string, value: bigint];\r\n  export interface OutputObject {\r\n    owner: string;\r\n    spender: string;\r\n    value: bigint;\r\n  }\r\n  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;\r\n  export type Filter = TypedDeferredTopicFilter<Event>;\r\n  export type Log = TypedEventLog<Event>;\r\n  export type LogDescription = TypedLogDescription<Event>;\r\n}\r\n\r\nexport namespace RoleAdminChangedEvent {\r\n  export type InputTuple = [\r\n    role: BytesLike,\r\n    previousAdminRole: BytesLike,\r\n    newAdminRole: BytesLike\r\n  ];\r\n  export type OutputTuple = [\r\n    role: string,\r\n    previousAdminRole: string,\r\n    newAdminRole: string\r\n  ];\r\n  export interface OutputObject {\r\n    role: string;\r\n    previousAdminRole: string;\r\n    newAdminRole: string;\r\n  }\r\n  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;\r\n  export type Filter = TypedDeferredTopicFilter<Event>;\r\n  export type Log = TypedEventLog<Event>;\r\n  export type LogDescription = TypedLogDescription<Event>;\r\n}\r\n\r\nexport namespace RoleGrantedEvent {\r\n  export type InputTuple = [\r\n    role: BytesLike,\r\n    account: AddressLike,\r\n    sender: AddressLike\r\n  ];\r\n  export type OutputTuple = [role: string, account: string, sender: string];\r\n  export interface OutputObject {\r\n    role: string;\r\n    account: string;\r\n    sender: string;\r\n  }\r\n  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;\r\n  export type Filter = TypedDeferredTopicFilter<Event>;\r\n  export type Log = TypedEventLog<Event>;\r\n  export type LogDescription = TypedLogDescription<Event>;\r\n}\r\n\r\nexport namespace RoleRevokedEvent {\r\n  export type InputTuple = [\r\n    role: BytesLike,\r\n    account: AddressLike,\r\n    sender: AddressLike\r\n  ];\r\n  export type OutputTuple = [role: string, account: string, sender: string];\r\n  export interface OutputObject {\r\n    role: string;\r\n    account: string;\r\n    sender: string;\r\n  }\r\n  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;\r\n  export type Filter = TypedDeferredTopicFilter<Event>;\r\n  export type Log = TypedEventLog<Event>;\r\n  export type LogDescription = TypedLogDescription<Event>;\r\n}\r\n\r\nexport namespace TransferEvent {\r\n  export type InputTuple = [\r\n    from: AddressLike,\r\n    to: AddressLike,\r\n    value: BigNumberish\r\n  ];\r\n  export type OutputTuple = [from: string, to: string, value: bigint];\r\n  export interface OutputObject {\r\n    from: string;\r\n    to: string;\r\n    value: bigint;\r\n  }\r\n  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;\r\n  export type Filter = TypedDeferredTopicFilter<Event>;\r\n  export type Log = TypedEventLog<Event>;\r\n  export type LogDescription = TypedLogDescription<Event>;\r\n}\r\n\r\nexport interface Energy extends BaseContract {\r\n  connect(runner?: ContractRunner | null): Energy;\r\n  waitForDeployment(): Promise<this>;\r\n\r\n  interface: EnergyInterface;\r\n\r\n  queryFilter<TCEvent extends TypedContractEvent>(\r\n    event: TCEvent,\r\n    fromBlockOrBlockhash?: string | number | undefined,\r\n    toBlock?: string | number | undefined\r\n  ): Promise<Array<TypedEventLog<TCEvent>>>;\r\n  queryFilter<TCEvent extends TypedContractEvent>(\r\n    filter: TypedDeferredTopicFilter<TCEvent>,\r\n    fromBlockOrBlockhash?: string | number | undefined,\r\n    toBlock?: string | number | undefined\r\n  ): Promise<Array<TypedEventLog<TCEvent>>>;\r\n\r\n  on<TCEvent extends TypedContractEvent>(\r\n    event: TCEvent,\r\n    listener: TypedListener<TCEvent>\r\n  ): Promise<this>;\r\n  on<TCEvent extends TypedContractEvent>(\r\n    filter: TypedDeferredTopicFilter<TCEvent>,\r\n    listener: TypedListener<TCEvent>\r\n  ): Promise<this>;\r\n\r\n  once<TCEvent extends TypedContractEvent>(\r\n    event: TCEvent,\r\n    listener: TypedListener<TCEvent>\r\n  ): Promise<this>;\r\n  once<TCEvent extends TypedContractEvent>(\r\n    filter: TypedDeferredTopicFilter<TCEvent>,\r\n    listener: TypedListener<TCEvent>\r\n  ): Promise<this>;\r\n\r\n  listeners<TCEvent extends TypedContractEvent>(\r\n    event: TCEvent\r\n  ): Promise<Array<TypedListener<TCEvent>>>;\r\n  listeners(eventName?: string): Promise<Array<Listener>>;\r\n  removeAllListeners<TCEvent extends TypedContractEvent>(\r\n    event?: TCEvent\r\n  ): Promise<this>;\r\n\r\n  DEFAULT_ADMIN_ROLE: TypedContractMethod<[], [string], \"view\">;\r\n\r\n  allowance: TypedContractMethod<\r\n    [owner: AddressLike, spender: AddressLike],\r\n    [bigint],\r\n    \"view\"\r\n  >;\r\n\r\n  approve: TypedContractMethod<\r\n    [spender: AddressLike, amount: BigNumberish],\r\n    [boolean],\r\n    \"nonpayable\"\r\n  >;\r\n\r\n  balanceOf: TypedContractMethod<[account: AddressLike], [bigint], \"view\">;\r\n\r\n  burn: TypedContractMethod<\r\n    [account: AddressLike, amount: BigNumberish],\r\n    [void],\r\n    \"nonpayable\"\r\n  >;\r\n\r\n  decimals: TypedContractMethod<[], [bigint], \"view\">;\r\n\r\n  decreaseAllowance: TypedContractMethod<\r\n    [spender: AddressLike, subtractedValue: BigNumberish],\r\n    [boolean],\r\n    \"nonpayable\"\r\n  >;\r\n\r\n  getRoleAdmin: TypedContractMethod<[role: BytesLike], [string], \"view\">;\r\n\r\n  grantRole: TypedContractMethod<\r\n    [role: BytesLike, account: AddressLike],\r\n    [void],\r\n    \"nonpayable\"\r\n  >;\r\n\r\n  hasRole: TypedContractMethod<\r\n    [role: BytesLike, account: AddressLike],\r\n    [boolean],\r\n    \"view\"\r\n  >;\r\n\r\n  increaseAllowance: TypedContractMethod<\r\n    [spender: AddressLike, addedValue: BigNumberish],\r\n    [boolean],\r\n    \"nonpayable\"\r\n  >;\r\n\r\n  mint: TypedContractMethod<\r\n    [account: AddressLike, amount: BigNumberish],\r\n    [void],\r\n    \"nonpayable\"\r\n  >;\r\n\r\n  name: TypedContractMethod<[], [string], \"view\">;\r\n\r\n  renounceRole: TypedContractMethod<\r\n    [role: BytesLike, account: AddressLike],\r\n    [void],\r\n    \"nonpayable\"\r\n  >;\r\n\r\n  revokeRole: TypedContractMethod<\r\n    [role: BytesLike, account: AddressLike],\r\n    [void],\r\n    \"nonpayable\"\r\n  >;\r\n\r\n  supportsInterface: TypedContractMethod<\r\n    [interfaceId: BytesLike],\r\n    [boolean],\r\n    \"view\"\r\n  >;\r\n\r\n  symbol: TypedContractMethod<[], [string], \"view\">;\r\n\r\n  totalSupply: TypedContractMethod<[], [bigint], \"view\">;\r\n\r\n  transfer: TypedContractMethod<\r\n    [to: AddressLike, amount: BigNumberish],\r\n    [boolean],\r\n    \"nonpayable\"\r\n  >;\r\n\r\n  transferFrom: TypedContractMethod<\r\n    [from: AddressLike, to: AddressLike, amount: BigNumberish],\r\n    [boolean],\r\n    \"nonpayable\"\r\n  >;\r\n\r\n  getFunction<T extends ContractMethod = ContractMethod>(\r\n    key: string | FunctionFragment\r\n  ): T;\r\n\r\n  getFunction(\r\n    nameOrSignature: \"DEFAULT_ADMIN_ROLE\"\r\n  ): TypedContractMethod<[], [string], \"view\">;\r\n  getFunction(\r\n    nameOrSignature: \"allowance\"\r\n  ): TypedContractMethod<\r\n    [owner: AddressLike, spender: AddressLike],\r\n    [bigint],\r\n    \"view\"\r\n  >;\r\n  getFunction(\r\n    nameOrSignature: \"approve\"\r\n  ): TypedContractMethod<\r\n    [spender: AddressLike, amount: BigNumberish],\r\n    [boolean],\r\n    \"nonpayable\"\r\n  >;\r\n  getFunction(\r\n    nameOrSignature: \"balanceOf\"\r\n  ): TypedContractMethod<[account: AddressLike], [bigint], \"view\">;\r\n  getFunction(\r\n    nameOrSignature: \"burn\"\r\n  ): TypedContractMethod<\r\n    [account: AddressLike, amount: BigNumberish],\r\n    [void],\r\n    \"nonpayable\"\r\n  >;\r\n  getFunction(\r\n    nameOrSignature: \"decimals\"\r\n  ): TypedContractMethod<[], [bigint], \"view\">;\r\n  getFunction(\r\n    nameOrSignature: \"decreaseAllowance\"\r\n  ): TypedContractMethod<\r\n    [spender: AddressLike, subtractedValue: BigNumberish],\r\n    [boolean],\r\n    \"nonpayable\"\r\n  >;\r\n  getFunction(\r\n    nameOrSignature: \"getRoleAdmin\"\r\n  ): TypedContractMethod<[role: BytesLike], [string], \"view\">;\r\n  getFunction(\r\n    nameOrSignature: \"grantRole\"\r\n  ): TypedContractMethod<\r\n    [role: BytesLike, account: AddressLike],\r\n    [void],\r\n    \"nonpayable\"\r\n  >;\r\n  getFunction(\r\n    nameOrSignature: \"hasRole\"\r\n  ): TypedContractMethod<\r\n    [role: BytesLike, account: AddressLike],\r\n    [boolean],\r\n    \"view\"\r\n  >;\r\n  getFunction(\r\n    nameOrSignature: \"increaseAllowance\"\r\n  ): TypedContractMethod<\r\n    [spender: AddressLike, addedValue: BigNumberish],\r\n    [boolean],\r\n    \"nonpayable\"\r\n  >;\r\n  getFunction(\r\n    nameOrSignature: \"mint\"\r\n  ): TypedContractMethod<\r\n    [account: AddressLike, amount: BigNumberish],\r\n    [void],\r\n    \"nonpayable\"\r\n  >;\r\n  getFunction(\r\n    nameOrSignature: \"name\"\r\n  ): TypedContractMethod<[], [string], \"view\">;\r\n  getFunction(\r\n    nameOrSignature: \"renounceRole\"\r\n  ): TypedContractMethod<\r\n    [role: BytesLike, account: AddressLike],\r\n    [void],\r\n    \"nonpayable\"\r\n  >;\r\n  getFunction(\r\n    nameOrSignature: \"revokeRole\"\r\n  ): TypedContractMethod<\r\n    [role: BytesLike, account: AddressLike],\r\n    [void],\r\n    \"nonpayable\"\r\n  >;\r\n  getFunction(\r\n    nameOrSignature: \"supportsInterface\"\r\n  ): TypedContractMethod<[interfaceId: BytesLike], [boolean], \"view\">;\r\n  getFunction(\r\n    nameOrSignature: \"symbol\"\r\n  ): TypedContractMethod<[], [string], \"view\">;\r\n  getFunction(\r\n    nameOrSignature: \"totalSupply\"\r\n  ): TypedContractMethod<[], [bigint], \"view\">;\r\n  getFunction(\r\n    nameOrSignature: \"transfer\"\r\n  ): TypedContractMethod<\r\n    [to: AddressLike, amount: BigNumberish],\r\n    [boolean],\r\n    \"nonpayable\"\r\n  >;\r\n  getFunction(\r\n    nameOrSignature: \"transferFrom\"\r\n  ): TypedContractMethod<\r\n    [from: AddressLike, to: AddressLike, amount: BigNumberish],\r\n    [boolean],\r\n    \"nonpayable\"\r\n  >;\r\n\r\n  getEvent(\r\n    key: \"Approval\"\r\n  ): TypedContractEvent<\r\n    ApprovalEvent.InputTuple,\r\n    ApprovalEvent.OutputTuple,\r\n    ApprovalEvent.OutputObject\r\n  >;\r\n  getEvent(\r\n    key: \"RoleAdminChanged\"\r\n  ): TypedContractEvent<\r\n    RoleAdminChangedEvent.InputTuple,\r\n    RoleAdminChangedEvent.OutputTuple,\r\n    RoleAdminChangedEvent.OutputObject\r\n  >;\r\n  getEvent(\r\n    key: \"RoleGranted\"\r\n  ): TypedContractEvent<\r\n    RoleGrantedEvent.InputTuple,\r\n    RoleGrantedEvent.OutputTuple,\r\n    RoleGrantedEvent.OutputObject\r\n  >;\r\n  getEvent(\r\n    key: \"RoleRevoked\"\r\n  ): TypedContractEvent<\r\n    RoleRevokedEvent.InputTuple,\r\n    RoleRevokedEvent.OutputTuple,\r\n    RoleRevokedEvent.OutputObject\r\n  >;\r\n  getEvent(\r\n    key: \"Transfer\"\r\n  ): TypedContractEvent<\r\n    TransferEvent.InputTuple,\r\n    TransferEvent.OutputTuple,\r\n    TransferEvent.OutputObject\r\n  >;\r\n\r\n  filters: {\r\n    \"Approval(address,address,uint256)\": TypedContractEvent<\r\n      ApprovalEvent.InputTuple,\r\n      ApprovalEvent.OutputTuple,\r\n      ApprovalEvent.OutputObject\r\n    >;\r\n    Approval: TypedContractEvent<\r\n      ApprovalEvent.InputTuple,\r\n      ApprovalEvent.OutputTuple,\r\n      ApprovalEvent.OutputObject\r\n    >;\r\n\r\n    \"RoleAdminChanged(bytes32,bytes32,bytes32)\": TypedContractEvent<\r\n      RoleAdminChangedEvent.InputTuple,\r\n      RoleAdminChangedEvent.OutputTuple,\r\n      RoleAdminChangedEvent.OutputObject\r\n    >;\r\n    RoleAdminChanged: TypedContractEvent<\r\n      RoleAdminChangedEvent.InputTuple,\r\n      RoleAdminChangedEvent.OutputTuple,\r\n      RoleAdminChangedEvent.OutputObject\r\n    >;\r\n\r\n    \"RoleGranted(bytes32,address,address)\": TypedContractEvent<\r\n      RoleGrantedEvent.InputTuple,\r\n      RoleGrantedEvent.OutputTuple,\r\n      RoleGrantedEvent.OutputObject\r\n    >;\r\n    RoleGranted: TypedContractEvent<\r\n      RoleGrantedEvent.InputTuple,\r\n      RoleGrantedEvent.OutputTuple,\r\n      RoleGrantedEvent.OutputObject\r\n    >;\r\n\r\n    \"RoleRevoked(bytes32,address,address)\": TypedContractEvent<\r\n      RoleRevokedEvent.InputTuple,\r\n      RoleRevokedEvent.OutputTuple,\r\n      RoleRevokedEvent.OutputObject\r\n    >;\r\n    RoleRevoked: TypedContractEvent<\r\n      RoleRevokedEvent.InputTuple,\r\n      RoleRevokedEvent.OutputTuple,\r\n      RoleRevokedEvent.OutputObject\r\n    >;\r\n\r\n    \"Transfer(address,address,uint256)\": TypedContractEvent<\r\n      TransferEvent.InputTuple,\r\n      TransferEvent.OutputTuple,\r\n      TransferEvent.OutputObject\r\n    >;\r\n    Transfer: TypedContractEvent<\r\n      TransferEvent.InputTuple,\r\n      TransferEvent.OutputTuple,\r\n      TransferEvent.OutputObject\r\n    >;\r\n  };\r\n}\r\n"]}