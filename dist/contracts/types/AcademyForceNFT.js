"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
//# sourceMappingURL=data:application/json;base64,{"version":3,"file":"AcademyForceNFT.js","sourceRoot":"","sources":["../../../src/contracts/types/AcademyForceNFT.ts"],"names":[],"mappings":"","sourcesContent":["/* Autogenerated file. Do not edit manually. */\n/* tslint:disable */\n/* eslint-disable */\nimport type {\n  BaseContract,\n  BigNumberish,\n  BytesLike,\n  FunctionFragment,\n  Result,\n  Interface,\n  EventFragment,\n  AddressLike,\n  ContractRunner,\n  ContractMethod,\n  Listener,\n} from \"ethers\";\nimport type {\n  TypedContractEvent,\n  TypedDeferredTopicFilter,\n  TypedEventLog,\n  TypedLogDescription,\n  TypedListener,\n  TypedContractMethod,\n} from \"./common\";\n\nexport interface AcademyForceNFTInterface extends Interface {\n  getFunction(\n    nameOrSignature:\n      | \"DEFAULT_ADMIN_ROLE\"\n      | \"DOMAIN_SEPARATOR\"\n      | \"approve\"\n      | \"balanceOf\"\n      | \"claim\"\n      | \"description\"\n      | \"getApproved\"\n      | \"getRoleAdmin\"\n      | \"grantRole\"\n      | \"hasRole\"\n      | \"isApprovedForAll\"\n      | \"isTransfer\"\n      | \"mintedDates\"\n      | \"name\"\n      | \"nextTokenId\"\n      | \"nonces\"\n      | \"ownerOf\"\n      | \"renounceRole\"\n      | \"revokeRole\"\n      | \"safeTransferFrom(address,address,uint256)\"\n      | \"safeTransferFrom(address,address,uint256,bytes)\"\n      | \"setApprovalForAll\"\n      | \"setIsTransfer\"\n      | \"shelfLife\"\n      | \"supportsInterface\"\n      | \"symbol\"\n      | \"tokenURI\"\n      | \"topic\"\n      | \"transferFrom\"\n      | \"uriImg\"\n      | \"userNames\"\n      | \"usersNFT\"\n      | \"version\"\n  ): FunctionFragment;\n\n  getEvent(\n    nameOrSignatureOrTopic:\n      | \"Approval\"\n      | \"ApprovalForAll\"\n      | \"RoleAdminChanged\"\n      | \"RoleGranted\"\n      | \"RoleRevoked\"\n      | \"Transfer\"\n  ): EventFragment;\n\n  encodeFunctionData(\n    functionFragment: \"DEFAULT_ADMIN_ROLE\",\n    values?: undefined\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"DOMAIN_SEPARATOR\",\n    values?: undefined\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"approve\",\n    values: [AddressLike, BigNumberish]\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"balanceOf\",\n    values: [AddressLike]\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"claim\",\n    values: [AddressLike, string, BigNumberish, BytesLike, BytesLike]\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"description\",\n    values?: undefined\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"getApproved\",\n    values: [BigNumberish]\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"getRoleAdmin\",\n    values: [BytesLike]\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"grantRole\",\n    values: [BytesLike, AddressLike]\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"hasRole\",\n    values: [BytesLike, AddressLike]\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"isApprovedForAll\",\n    values: [AddressLike, AddressLike]\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"isTransfer\",\n    values?: undefined\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"mintedDates\",\n    values: [BigNumberish]\n  ): string;\n  encodeFunctionData(functionFragment: \"name\", values?: undefined): string;\n  encodeFunctionData(\n    functionFragment: \"nextTokenId\",\n    values?: undefined\n  ): string;\n  encodeFunctionData(functionFragment: \"nonces\", values: [AddressLike]): string;\n  encodeFunctionData(\n    functionFragment: \"ownerOf\",\n    values: [BigNumberish]\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"renounceRole\",\n    values: [BytesLike, AddressLike]\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"revokeRole\",\n    values: [BytesLike, AddressLike]\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"safeTransferFrom(address,address,uint256)\",\n    values: [AddressLike, AddressLike, BigNumberish]\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"safeTransferFrom(address,address,uint256,bytes)\",\n    values: [AddressLike, AddressLike, BigNumberish, BytesLike]\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"setApprovalForAll\",\n    values: [AddressLike, boolean]\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"setIsTransfer\",\n    values: [boolean]\n  ): string;\n  encodeFunctionData(functionFragment: \"shelfLife\", values?: undefined): string;\n  encodeFunctionData(\n    functionFragment: \"supportsInterface\",\n    values: [BytesLike]\n  ): string;\n  encodeFunctionData(functionFragment: \"symbol\", values?: undefined): string;\n  encodeFunctionData(\n    functionFragment: \"tokenURI\",\n    values: [BigNumberish]\n  ): string;\n  encodeFunctionData(functionFragment: \"topic\", values?: undefined): string;\n  encodeFunctionData(\n    functionFragment: \"transferFrom\",\n    values: [AddressLike, AddressLike, BigNumberish]\n  ): string;\n  encodeFunctionData(functionFragment: \"uriImg\", values?: undefined): string;\n  encodeFunctionData(\n    functionFragment: \"userNames\",\n    values: [BigNumberish]\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"usersNFT\",\n    values: [AddressLike, BigNumberish]\n  ): string;\n  encodeFunctionData(functionFragment: \"version\", values?: undefined): string;\n\n  decodeFunctionResult(\n    functionFragment: \"DEFAULT_ADMIN_ROLE\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(\n    functionFragment: \"DOMAIN_SEPARATOR\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(functionFragment: \"approve\", data: BytesLike): Result;\n  decodeFunctionResult(functionFragment: \"balanceOf\", data: BytesLike): Result;\n  decodeFunctionResult(functionFragment: \"claim\", data: BytesLike): Result;\n  decodeFunctionResult(\n    functionFragment: \"description\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(\n    functionFragment: \"getApproved\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(\n    functionFragment: \"getRoleAdmin\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(functionFragment: \"grantRole\", data: BytesLike): Result;\n  decodeFunctionResult(functionFragment: \"hasRole\", data: BytesLike): Result;\n  decodeFunctionResult(\n    functionFragment: \"isApprovedForAll\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(functionFragment: \"isTransfer\", data: BytesLike): Result;\n  decodeFunctionResult(\n    functionFragment: \"mintedDates\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(functionFragment: \"name\", data: BytesLike): Result;\n  decodeFunctionResult(\n    functionFragment: \"nextTokenId\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(functionFragment: \"nonces\", data: BytesLike): Result;\n  decodeFunctionResult(functionFragment: \"ownerOf\", data: BytesLike): Result;\n  decodeFunctionResult(\n    functionFragment: \"renounceRole\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(functionFragment: \"revokeRole\", data: BytesLike): Result;\n  decodeFunctionResult(\n    functionFragment: \"safeTransferFrom(address,address,uint256)\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(\n    functionFragment: \"safeTransferFrom(address,address,uint256,bytes)\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(\n    functionFragment: \"setApprovalForAll\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(\n    functionFragment: \"setIsTransfer\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(functionFragment: \"shelfLife\", data: BytesLike): Result;\n  decodeFunctionResult(\n    functionFragment: \"supportsInterface\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(functionFragment: \"symbol\", data: BytesLike): Result;\n  decodeFunctionResult(functionFragment: \"tokenURI\", data: BytesLike): Result;\n  decodeFunctionResult(functionFragment: \"topic\", data: BytesLike): Result;\n  decodeFunctionResult(\n    functionFragment: \"transferFrom\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(functionFragment: \"uriImg\", data: BytesLike): Result;\n  decodeFunctionResult(functionFragment: \"userNames\", data: BytesLike): Result;\n  decodeFunctionResult(functionFragment: \"usersNFT\", data: BytesLike): Result;\n  decodeFunctionResult(functionFragment: \"version\", data: BytesLike): Result;\n}\n\nexport namespace ApprovalEvent {\n  export type InputTuple = [\n    owner: AddressLike,\n    approved: AddressLike,\n    tokenId: BigNumberish\n  ];\n  export type OutputTuple = [owner: string, approved: string, tokenId: bigint];\n  export interface OutputObject {\n    owner: string;\n    approved: string;\n    tokenId: bigint;\n  }\n  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;\n  export type Filter = TypedDeferredTopicFilter<Event>;\n  export type Log = TypedEventLog<Event>;\n  export type LogDescription = TypedLogDescription<Event>;\n}\n\nexport namespace ApprovalForAllEvent {\n  export type InputTuple = [\n    owner: AddressLike,\n    operator: AddressLike,\n    approved: boolean\n  ];\n  export type OutputTuple = [\n    owner: string,\n    operator: string,\n    approved: boolean\n  ];\n  export interface OutputObject {\n    owner: string;\n    operator: string;\n    approved: boolean;\n  }\n  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;\n  export type Filter = TypedDeferredTopicFilter<Event>;\n  export type Log = TypedEventLog<Event>;\n  export type LogDescription = TypedLogDescription<Event>;\n}\n\nexport namespace RoleAdminChangedEvent {\n  export type InputTuple = [\n    role: BytesLike,\n    previousAdminRole: BytesLike,\n    newAdminRole: BytesLike\n  ];\n  export type OutputTuple = [\n    role: string,\n    previousAdminRole: string,\n    newAdminRole: string\n  ];\n  export interface OutputObject {\n    role: string;\n    previousAdminRole: string;\n    newAdminRole: string;\n  }\n  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;\n  export type Filter = TypedDeferredTopicFilter<Event>;\n  export type Log = TypedEventLog<Event>;\n  export type LogDescription = TypedLogDescription<Event>;\n}\n\nexport namespace RoleGrantedEvent {\n  export type InputTuple = [\n    role: BytesLike,\n    account: AddressLike,\n    sender: AddressLike\n  ];\n  export type OutputTuple = [role: string, account: string, sender: string];\n  export interface OutputObject {\n    role: string;\n    account: string;\n    sender: string;\n  }\n  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;\n  export type Filter = TypedDeferredTopicFilter<Event>;\n  export type Log = TypedEventLog<Event>;\n  export type LogDescription = TypedLogDescription<Event>;\n}\n\nexport namespace RoleRevokedEvent {\n  export type InputTuple = [\n    role: BytesLike,\n    account: AddressLike,\n    sender: AddressLike\n  ];\n  export type OutputTuple = [role: string, account: string, sender: string];\n  export interface OutputObject {\n    role: string;\n    account: string;\n    sender: string;\n  }\n  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;\n  export type Filter = TypedDeferredTopicFilter<Event>;\n  export type Log = TypedEventLog<Event>;\n  export type LogDescription = TypedLogDescription<Event>;\n}\n\nexport namespace TransferEvent {\n  export type InputTuple = [\n    from: AddressLike,\n    to: AddressLike,\n    tokenId: BigNumberish\n  ];\n  export type OutputTuple = [from: string, to: string, tokenId: bigint];\n  export interface OutputObject {\n    from: string;\n    to: string;\n    tokenId: bigint;\n  }\n  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;\n  export type Filter = TypedDeferredTopicFilter<Event>;\n  export type Log = TypedEventLog<Event>;\n  export type LogDescription = TypedLogDescription<Event>;\n}\n\nexport interface AcademyForceNFT extends BaseContract {\n  connect(runner?: ContractRunner | null): AcademyForceNFT;\n  waitForDeployment(): Promise<this>;\n\n  interface: AcademyForceNFTInterface;\n\n  queryFilter<TCEvent extends TypedContractEvent>(\n    event: TCEvent,\n    fromBlockOrBlockhash?: string | number | undefined,\n    toBlock?: string | number | undefined\n  ): Promise<Array<TypedEventLog<TCEvent>>>;\n  queryFilter<TCEvent extends TypedContractEvent>(\n    filter: TypedDeferredTopicFilter<TCEvent>,\n    fromBlockOrBlockhash?: string | number | undefined,\n    toBlock?: string | number | undefined\n  ): Promise<Array<TypedEventLog<TCEvent>>>;\n\n  on<TCEvent extends TypedContractEvent>(\n    event: TCEvent,\n    listener: TypedListener<TCEvent>\n  ): Promise<this>;\n  on<TCEvent extends TypedContractEvent>(\n    filter: TypedDeferredTopicFilter<TCEvent>,\n    listener: TypedListener<TCEvent>\n  ): Promise<this>;\n\n  once<TCEvent extends TypedContractEvent>(\n    event: TCEvent,\n    listener: TypedListener<TCEvent>\n  ): Promise<this>;\n  once<TCEvent extends TypedContractEvent>(\n    filter: TypedDeferredTopicFilter<TCEvent>,\n    listener: TypedListener<TCEvent>\n  ): Promise<this>;\n\n  listeners<TCEvent extends TypedContractEvent>(\n    event: TCEvent\n  ): Promise<Array<TypedListener<TCEvent>>>;\n  listeners(eventName?: string): Promise<Array<Listener>>;\n  removeAllListeners<TCEvent extends TypedContractEvent>(\n    event?: TCEvent\n  ): Promise<this>;\n\n  DEFAULT_ADMIN_ROLE: TypedContractMethod<[], [string], \"view\">;\n\n  DOMAIN_SEPARATOR: TypedContractMethod<[], [string], \"view\">;\n\n  approve: TypedContractMethod<\n    [to: AddressLike, tokenId: BigNumberish],\n    [void],\n    \"nonpayable\"\n  >;\n\n  balanceOf: TypedContractMethod<[owner: AddressLike], [bigint], \"view\">;\n\n  claim: TypedContractMethod<\n    [\n      _to: AddressLike,\n      _name: string,\n      v: BigNumberish,\n      r: BytesLike,\n      s: BytesLike\n    ],\n    [void],\n    \"nonpayable\"\n  >;\n\n  description: TypedContractMethod<[], [string], \"view\">;\n\n  getApproved: TypedContractMethod<[tokenId: BigNumberish], [string], \"view\">;\n\n  getRoleAdmin: TypedContractMethod<[role: BytesLike], [string], \"view\">;\n\n  grantRole: TypedContractMethod<\n    [role: BytesLike, account: AddressLike],\n    [void],\n    \"nonpayable\"\n  >;\n\n  hasRole: TypedContractMethod<\n    [role: BytesLike, account: AddressLike],\n    [boolean],\n    \"view\"\n  >;\n\n  isApprovedForAll: TypedContractMethod<\n    [owner: AddressLike, operator: AddressLike],\n    [boolean],\n    \"view\"\n  >;\n\n  isTransfer: TypedContractMethod<[], [boolean], \"view\">;\n\n  mintedDates: TypedContractMethod<[arg0: BigNumberish], [bigint], \"view\">;\n\n  name: TypedContractMethod<[], [string], \"view\">;\n\n  nextTokenId: TypedContractMethod<[], [bigint], \"view\">;\n\n  nonces: TypedContractMethod<[arg0: AddressLike], [bigint], \"view\">;\n\n  ownerOf: TypedContractMethod<[tokenId: BigNumberish], [string], \"view\">;\n\n  renounceRole: TypedContractMethod<\n    [role: BytesLike, account: AddressLike],\n    [void],\n    \"nonpayable\"\n  >;\n\n  revokeRole: TypedContractMethod<\n    [role: BytesLike, account: AddressLike],\n    [void],\n    \"nonpayable\"\n  >;\n\n  \"safeTransferFrom(address,address,uint256)\": TypedContractMethod<\n    [from: AddressLike, to: AddressLike, tokenId: BigNumberish],\n    [void],\n    \"nonpayable\"\n  >;\n\n  \"safeTransferFrom(address,address,uint256,bytes)\": TypedContractMethod<\n    [\n      from: AddressLike,\n      to: AddressLike,\n      tokenId: BigNumberish,\n      data: BytesLike\n    ],\n    [void],\n    \"nonpayable\"\n  >;\n\n  setApprovalForAll: TypedContractMethod<\n    [operator: AddressLike, approved: boolean],\n    [void],\n    \"nonpayable\"\n  >;\n\n  setIsTransfer: TypedContractMethod<\n    [_isTransfer: boolean],\n    [void],\n    \"nonpayable\"\n  >;\n\n  shelfLife: TypedContractMethod<[], [bigint], \"view\">;\n\n  supportsInterface: TypedContractMethod<\n    [interfaceId: BytesLike],\n    [boolean],\n    \"view\"\n  >;\n\n  symbol: TypedContractMethod<[], [string], \"view\">;\n\n  tokenURI: TypedContractMethod<[tokenId: BigNumberish], [string], \"view\">;\n\n  topic: TypedContractMethod<[], [string], \"view\">;\n\n  transferFrom: TypedContractMethod<\n    [from: AddressLike, to: AddressLike, tokenId: BigNumberish],\n    [void],\n    \"nonpayable\"\n  >;\n\n  uriImg: TypedContractMethod<[], [string], \"view\">;\n\n  userNames: TypedContractMethod<[arg0: BigNumberish], [string], \"view\">;\n\n  usersNFT: TypedContractMethod<\n    [arg0: AddressLike, arg1: BigNumberish],\n    [bigint],\n    \"view\"\n  >;\n\n  version: TypedContractMethod<[], [string], \"view\">;\n\n  getFunction<T extends ContractMethod = ContractMethod>(\n    key: string | FunctionFragment\n  ): T;\n\n  getFunction(\n    nameOrSignature: \"DEFAULT_ADMIN_ROLE\"\n  ): TypedContractMethod<[], [string], \"view\">;\n  getFunction(\n    nameOrSignature: \"DOMAIN_SEPARATOR\"\n  ): TypedContractMethod<[], [string], \"view\">;\n  getFunction(\n    nameOrSignature: \"approve\"\n  ): TypedContractMethod<\n    [to: AddressLike, tokenId: BigNumberish],\n    [void],\n    \"nonpayable\"\n  >;\n  getFunction(\n    nameOrSignature: \"balanceOf\"\n  ): TypedContractMethod<[owner: AddressLike], [bigint], \"view\">;\n  getFunction(\n    nameOrSignature: \"claim\"\n  ): TypedContractMethod<\n    [\n      _to: AddressLike,\n      _name: string,\n      v: BigNumberish,\n      r: BytesLike,\n      s: BytesLike\n    ],\n    [void],\n    \"nonpayable\"\n  >;\n  getFunction(\n    nameOrSignature: \"description\"\n  ): TypedContractMethod<[], [string], \"view\">;\n  getFunction(\n    nameOrSignature: \"getApproved\"\n  ): TypedContractMethod<[tokenId: BigNumberish], [string], \"view\">;\n  getFunction(\n    nameOrSignature: \"getRoleAdmin\"\n  ): TypedContractMethod<[role: BytesLike], [string], \"view\">;\n  getFunction(\n    nameOrSignature: \"grantRole\"\n  ): TypedContractMethod<\n    [role: BytesLike, account: AddressLike],\n    [void],\n    \"nonpayable\"\n  >;\n  getFunction(\n    nameOrSignature: \"hasRole\"\n  ): TypedContractMethod<\n    [role: BytesLike, account: AddressLike],\n    [boolean],\n    \"view\"\n  >;\n  getFunction(\n    nameOrSignature: \"isApprovedForAll\"\n  ): TypedContractMethod<\n    [owner: AddressLike, operator: AddressLike],\n    [boolean],\n    \"view\"\n  >;\n  getFunction(\n    nameOrSignature: \"isTransfer\"\n  ): TypedContractMethod<[], [boolean], \"view\">;\n  getFunction(\n    nameOrSignature: \"mintedDates\"\n  ): TypedContractMethod<[arg0: BigNumberish], [bigint], \"view\">;\n  getFunction(\n    nameOrSignature: \"name\"\n  ): TypedContractMethod<[], [string], \"view\">;\n  getFunction(\n    nameOrSignature: \"nextTokenId\"\n  ): TypedContractMethod<[], [bigint], \"view\">;\n  getFunction(\n    nameOrSignature: \"nonces\"\n  ): TypedContractMethod<[arg0: AddressLike], [bigint], \"view\">;\n  getFunction(\n    nameOrSignature: \"ownerOf\"\n  ): TypedContractMethod<[tokenId: BigNumberish], [string], \"view\">;\n  getFunction(\n    nameOrSignature: \"renounceRole\"\n  ): TypedContractMethod<\n    [role: BytesLike, account: AddressLike],\n    [void],\n    \"nonpayable\"\n  >;\n  getFunction(\n    nameOrSignature: \"revokeRole\"\n  ): TypedContractMethod<\n    [role: BytesLike, account: AddressLike],\n    [void],\n    \"nonpayable\"\n  >;\n  getFunction(\n    nameOrSignature: \"safeTransferFrom(address,address,uint256)\"\n  ): TypedContractMethod<\n    [from: AddressLike, to: AddressLike, tokenId: BigNumberish],\n    [void],\n    \"nonpayable\"\n  >;\n  getFunction(\n    nameOrSignature: \"safeTransferFrom(address,address,uint256,bytes)\"\n  ): TypedContractMethod<\n    [\n      from: AddressLike,\n      to: AddressLike,\n      tokenId: BigNumberish,\n      data: BytesLike\n    ],\n    [void],\n    \"nonpayable\"\n  >;\n  getFunction(\n    nameOrSignature: \"setApprovalForAll\"\n  ): TypedContractMethod<\n    [operator: AddressLike, approved: boolean],\n    [void],\n    \"nonpayable\"\n  >;\n  getFunction(\n    nameOrSignature: \"setIsTransfer\"\n  ): TypedContractMethod<[_isTransfer: boolean], [void], \"nonpayable\">;\n  getFunction(\n    nameOrSignature: \"shelfLife\"\n  ): TypedContractMethod<[], [bigint], \"view\">;\n  getFunction(\n    nameOrSignature: \"supportsInterface\"\n  ): TypedContractMethod<[interfaceId: BytesLike], [boolean], \"view\">;\n  getFunction(\n    nameOrSignature: \"symbol\"\n  ): TypedContractMethod<[], [string], \"view\">;\n  getFunction(\n    nameOrSignature: \"tokenURI\"\n  ): TypedContractMethod<[tokenId: BigNumberish], [string], \"view\">;\n  getFunction(\n    nameOrSignature: \"topic\"\n  ): TypedContractMethod<[], [string], \"view\">;\n  getFunction(\n    nameOrSignature: \"transferFrom\"\n  ): TypedContractMethod<\n    [from: AddressLike, to: AddressLike, tokenId: BigNumberish],\n    [void],\n    \"nonpayable\"\n  >;\n  getFunction(\n    nameOrSignature: \"uriImg\"\n  ): TypedContractMethod<[], [string], \"view\">;\n  getFunction(\n    nameOrSignature: \"userNames\"\n  ): TypedContractMethod<[arg0: BigNumberish], [string], \"view\">;\n  getFunction(\n    nameOrSignature: \"usersNFT\"\n  ): TypedContractMethod<\n    [arg0: AddressLike, arg1: BigNumberish],\n    [bigint],\n    \"view\"\n  >;\n  getFunction(\n    nameOrSignature: \"version\"\n  ): TypedContractMethod<[], [string], \"view\">;\n\n  getEvent(\n    key: \"Approval\"\n  ): TypedContractEvent<\n    ApprovalEvent.InputTuple,\n    ApprovalEvent.OutputTuple,\n    ApprovalEvent.OutputObject\n  >;\n  getEvent(\n    key: \"ApprovalForAll\"\n  ): TypedContractEvent<\n    ApprovalForAllEvent.InputTuple,\n    ApprovalForAllEvent.OutputTuple,\n    ApprovalForAllEvent.OutputObject\n  >;\n  getEvent(\n    key: \"RoleAdminChanged\"\n  ): TypedContractEvent<\n    RoleAdminChangedEvent.InputTuple,\n    RoleAdminChangedEvent.OutputTuple,\n    RoleAdminChangedEvent.OutputObject\n  >;\n  getEvent(\n    key: \"RoleGranted\"\n  ): TypedContractEvent<\n    RoleGrantedEvent.InputTuple,\n    RoleGrantedEvent.OutputTuple,\n    RoleGrantedEvent.OutputObject\n  >;\n  getEvent(\n    key: \"RoleRevoked\"\n  ): TypedContractEvent<\n    RoleRevokedEvent.InputTuple,\n    RoleRevokedEvent.OutputTuple,\n    RoleRevokedEvent.OutputObject\n  >;\n  getEvent(\n    key: \"Transfer\"\n  ): TypedContractEvent<\n    TransferEvent.InputTuple,\n    TransferEvent.OutputTuple,\n    TransferEvent.OutputObject\n  >;\n\n  filters: {\n    \"Approval(address,address,uint256)\": TypedContractEvent<\n      ApprovalEvent.InputTuple,\n      ApprovalEvent.OutputTuple,\n      ApprovalEvent.OutputObject\n    >;\n    Approval: TypedContractEvent<\n      ApprovalEvent.InputTuple,\n      ApprovalEvent.OutputTuple,\n      ApprovalEvent.OutputObject\n    >;\n\n    \"ApprovalForAll(address,address,bool)\": TypedContractEvent<\n      ApprovalForAllEvent.InputTuple,\n      ApprovalForAllEvent.OutputTuple,\n      ApprovalForAllEvent.OutputObject\n    >;\n    ApprovalForAll: TypedContractEvent<\n      ApprovalForAllEvent.InputTuple,\n      ApprovalForAllEvent.OutputTuple,\n      ApprovalForAllEvent.OutputObject\n    >;\n\n    \"RoleAdminChanged(bytes32,bytes32,bytes32)\": TypedContractEvent<\n      RoleAdminChangedEvent.InputTuple,\n      RoleAdminChangedEvent.OutputTuple,\n      RoleAdminChangedEvent.OutputObject\n    >;\n    RoleAdminChanged: TypedContractEvent<\n      RoleAdminChangedEvent.InputTuple,\n      RoleAdminChangedEvent.OutputTuple,\n      RoleAdminChangedEvent.OutputObject\n    >;\n\n    \"RoleGranted(bytes32,address,address)\": TypedContractEvent<\n      RoleGrantedEvent.InputTuple,\n      RoleGrantedEvent.OutputTuple,\n      RoleGrantedEvent.OutputObject\n    >;\n    RoleGranted: TypedContractEvent<\n      RoleGrantedEvent.InputTuple,\n      RoleGrantedEvent.OutputTuple,\n      RoleGrantedEvent.OutputObject\n    >;\n\n    \"RoleRevoked(bytes32,address,address)\": TypedContractEvent<\n      RoleRevokedEvent.InputTuple,\n      RoleRevokedEvent.OutputTuple,\n      RoleRevokedEvent.OutputObject\n    >;\n    RoleRevoked: TypedContractEvent<\n      RoleRevokedEvent.InputTuple,\n      RoleRevokedEvent.OutputTuple,\n      RoleRevokedEvent.OutputObject\n    >;\n\n    \"Transfer(address,address,uint256)\": TypedContractEvent<\n      TransferEvent.InputTuple,\n      TransferEvent.OutputTuple,\n      TransferEvent.OutputObject\n    >;\n    Transfer: TypedContractEvent<\n      TransferEvent.InputTuple,\n      TransferEvent.OutputTuple,\n      TransferEvent.OutputObject\n    >;\n  };\n}\n"]}