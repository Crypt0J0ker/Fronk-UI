"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
//# sourceMappingURL=data:application/json;base64,{"version":3,"file":"MetaCore.js","sourceRoot":"","sources":["../../../src/contracts/types/MetaCore.ts"],"names":[],"mappings":"","sourcesContent":["/* Autogenerated file. Do not edit manually. */\n/* tslint:disable */\n/* eslint-disable */\nimport type {\n  BaseContract,\n  BigNumberish,\n  BytesLike,\n  FunctionFragment,\n  Result,\n  Interface,\n  EventFragment,\n  AddressLike,\n  ContractRunner,\n  ContractMethod,\n  Listener,\n} from \"ethers\";\nimport type {\n  TypedContractEvent,\n  TypedDeferredTopicFilter,\n  TypedEventLog,\n  TypedLogDescription,\n  TypedListener,\n  TypedContractMethod,\n} from \"./common\";\n\nexport interface MetaCoreInterface extends Interface {\n  getFunction(\n    nameOrSignature:\n      | \"DEFAULT_ADMIN_ROLE\"\n      | \"adminChangeHashKey\"\n      | \"adminChangeIdAddress\"\n      | \"adminSetAlias\"\n      | \"adminSetNextId\"\n      | \"adminSetUserAddress\"\n      | \"adminSetUserReferrer\"\n      | \"adminSetUserRegistrationDate\"\n      | \"changeHashKey\"\n      | \"changeIdAddress\"\n      | \"checkRegistration\"\n      | \"getAlias\"\n      | \"getAllowAdminControl\"\n      | \"getHashKey\"\n      | \"getPaymentChannelAddress\"\n      | \"getReferralAmount\"\n      | \"getReferralPage\"\n      | \"getReferrer\"\n      | \"getReferrers\"\n      | \"getRegistrationDate\"\n      | \"getRoleAdmin\"\n      | \"getUserAddress\"\n      | \"getUserId\"\n      | \"getUserIdByAlias\"\n      | \"grantRole\"\n      | \"hasRole\"\n      | \"initialize\"\n      | \"nextId\"\n      | \"registration(uint256)\"\n      | \"registration(address[],uint256[],uint256[])\"\n      | \"renounceRole\"\n      | \"retrieveMyIdAddress\"\n      | \"revokeRole\"\n      | \"root\"\n      | \"setAlias\"\n      | \"setAllowAdminControl\"\n      | \"setHashKey\"\n      | \"setPaymentChannelAddress\"\n      | \"supportsInterface\"\n  ): FunctionFragment;\n\n  getEvent(\n    nameOrSignatureOrTopic:\n      | \"AccountTransfer\"\n      | \"AccountUpdateAlias\"\n      | \"AccountUpdateHashKey\"\n      | \"Initialized\"\n      | \"Registration\"\n      | \"RoleAdminChanged\"\n      | \"RoleGranted\"\n      | \"RoleRevoked\"\n  ): EventFragment;\n\n  encodeFunctionData(\n    functionFragment: \"DEFAULT_ADMIN_ROLE\",\n    values?: undefined\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"adminChangeHashKey\",\n    values: [BigNumberish, BytesLike]\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"adminChangeIdAddress\",\n    values: [BigNumberish, AddressLike]\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"adminSetAlias\",\n    values: [BigNumberish, string]\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"adminSetNextId\",\n    values: [BigNumberish]\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"adminSetUserAddress\",\n    values: [BigNumberish, AddressLike]\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"adminSetUserReferrer\",\n    values: [BigNumberish, BigNumberish]\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"adminSetUserRegistrationDate\",\n    values: [BigNumberish, BigNumberish]\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"changeHashKey\",\n    values: [string[], BigNumberish, BytesLike]\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"changeIdAddress\",\n    values: [AddressLike]\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"checkRegistration\",\n    values: [AddressLike]\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"getAlias\",\n    values: [BigNumberish]\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"getAllowAdminControl\",\n    values: [BigNumberish]\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"getHashKey\",\n    values: [BigNumberish]\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"getPaymentChannelAddress\",\n    values?: undefined\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"getReferralAmount\",\n    values: [BigNumberish]\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"getReferralPage\",\n    values: [BigNumberish, BigNumberish, BigNumberish]\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"getReferrer\",\n    values: [BigNumberish]\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"getReferrers\",\n    values: [BigNumberish, BigNumberish]\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"getRegistrationDate\",\n    values: [BigNumberish]\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"getRoleAdmin\",\n    values: [BytesLike]\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"getUserAddress\",\n    values: [BigNumberish]\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"getUserId\",\n    values: [AddressLike]\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"getUserIdByAlias\",\n    values: [string]\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"grantRole\",\n    values: [BytesLike, AddressLike]\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"hasRole\",\n    values: [BytesLike, AddressLike]\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"initialize\",\n    values: [AddressLike]\n  ): string;\n  encodeFunctionData(functionFragment: \"nextId\", values?: undefined): string;\n  encodeFunctionData(\n    functionFragment: \"registration(uint256)\",\n    values: [BigNumberish]\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"registration(address[],uint256[],uint256[])\",\n    values: [AddressLike[], BigNumberish[], BigNumberish[]]\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"renounceRole\",\n    values: [BytesLike, AddressLike]\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"retrieveMyIdAddress\",\n    values: [string[], BigNumberish]\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"revokeRole\",\n    values: [BytesLike, AddressLike]\n  ): string;\n  encodeFunctionData(functionFragment: \"root\", values?: undefined): string;\n  encodeFunctionData(\n    functionFragment: \"setAlias\",\n    values: [BigNumberish, string]\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"setAllowAdminControl\",\n    values: [boolean]\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"setHashKey\",\n    values: [BytesLike]\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"setPaymentChannelAddress\",\n    values: [AddressLike]\n  ): string;\n  encodeFunctionData(\n    functionFragment: \"supportsInterface\",\n    values: [BytesLike]\n  ): string;\n\n  decodeFunctionResult(\n    functionFragment: \"DEFAULT_ADMIN_ROLE\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(\n    functionFragment: \"adminChangeHashKey\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(\n    functionFragment: \"adminChangeIdAddress\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(\n    functionFragment: \"adminSetAlias\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(\n    functionFragment: \"adminSetNextId\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(\n    functionFragment: \"adminSetUserAddress\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(\n    functionFragment: \"adminSetUserReferrer\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(\n    functionFragment: \"adminSetUserRegistrationDate\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(\n    functionFragment: \"changeHashKey\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(\n    functionFragment: \"changeIdAddress\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(\n    functionFragment: \"checkRegistration\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(functionFragment: \"getAlias\", data: BytesLike): Result;\n  decodeFunctionResult(\n    functionFragment: \"getAllowAdminControl\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(functionFragment: \"getHashKey\", data: BytesLike): Result;\n  decodeFunctionResult(\n    functionFragment: \"getPaymentChannelAddress\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(\n    functionFragment: \"getReferralAmount\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(\n    functionFragment: \"getReferralPage\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(\n    functionFragment: \"getReferrer\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(\n    functionFragment: \"getReferrers\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(\n    functionFragment: \"getRegistrationDate\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(\n    functionFragment: \"getRoleAdmin\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(\n    functionFragment: \"getUserAddress\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(functionFragment: \"getUserId\", data: BytesLike): Result;\n  decodeFunctionResult(\n    functionFragment: \"getUserIdByAlias\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(functionFragment: \"grantRole\", data: BytesLike): Result;\n  decodeFunctionResult(functionFragment: \"hasRole\", data: BytesLike): Result;\n  decodeFunctionResult(functionFragment: \"initialize\", data: BytesLike): Result;\n  decodeFunctionResult(functionFragment: \"nextId\", data: BytesLike): Result;\n  decodeFunctionResult(\n    functionFragment: \"registration(uint256)\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(\n    functionFragment: \"registration(address[],uint256[],uint256[])\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(\n    functionFragment: \"renounceRole\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(\n    functionFragment: \"retrieveMyIdAddress\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(functionFragment: \"revokeRole\", data: BytesLike): Result;\n  decodeFunctionResult(functionFragment: \"root\", data: BytesLike): Result;\n  decodeFunctionResult(functionFragment: \"setAlias\", data: BytesLike): Result;\n  decodeFunctionResult(\n    functionFragment: \"setAllowAdminControl\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(functionFragment: \"setHashKey\", data: BytesLike): Result;\n  decodeFunctionResult(\n    functionFragment: \"setPaymentChannelAddress\",\n    data: BytesLike\n  ): Result;\n  decodeFunctionResult(\n    functionFragment: \"supportsInterface\",\n    data: BytesLike\n  ): Result;\n}\n\nexport namespace AccountTransferEvent {\n  export type InputTuple = [\n    from: AddressLike,\n    to: AddressLike,\n    id: BigNumberish\n  ];\n  export type OutputTuple = [from: string, to: string, id: bigint];\n  export interface OutputObject {\n    from: string;\n    to: string;\n    id: bigint;\n  }\n  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;\n  export type Filter = TypedDeferredTopicFilter<Event>;\n  export type Log = TypedEventLog<Event>;\n  export type LogDescription = TypedLogDescription<Event>;\n}\n\nexport namespace AccountUpdateAliasEvent {\n  export type InputTuple = [id: BigNumberish, al: string];\n  export type OutputTuple = [id: bigint, al: string];\n  export interface OutputObject {\n    id: bigint;\n    al: string;\n  }\n  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;\n  export type Filter = TypedDeferredTopicFilter<Event>;\n  export type Log = TypedEventLog<Event>;\n  export type LogDescription = TypedLogDescription<Event>;\n}\n\nexport namespace AccountUpdateHashKeyEvent {\n  export type InputTuple = [id: BigNumberish, hashKey: BytesLike];\n  export type OutputTuple = [id: bigint, hashKey: string];\n  export interface OutputObject {\n    id: bigint;\n    hashKey: string;\n  }\n  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;\n  export type Filter = TypedDeferredTopicFilter<Event>;\n  export type Log = TypedEventLog<Event>;\n  export type LogDescription = TypedLogDescription<Event>;\n}\n\nexport namespace InitializedEvent {\n  export type InputTuple = [version: BigNumberish];\n  export type OutputTuple = [version: bigint];\n  export interface OutputObject {\n    version: bigint;\n  }\n  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;\n  export type Filter = TypedDeferredTopicFilter<Event>;\n  export type Log = TypedEventLog<Event>;\n  export type LogDescription = TypedLogDescription<Event>;\n}\n\nexport namespace RegistrationEvent {\n  export type InputTuple = [\n    caller: AddressLike,\n    id: BigNumberish,\n    referrerId: BigNumberish,\n    block: BigNumberish\n  ];\n  export type OutputTuple = [\n    caller: string,\n    id: bigint,\n    referrerId: bigint,\n    block: bigint\n  ];\n  export interface OutputObject {\n    caller: string;\n    id: bigint;\n    referrerId: bigint;\n    block: bigint;\n  }\n  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;\n  export type Filter = TypedDeferredTopicFilter<Event>;\n  export type Log = TypedEventLog<Event>;\n  export type LogDescription = TypedLogDescription<Event>;\n}\n\nexport namespace RoleAdminChangedEvent {\n  export type InputTuple = [\n    role: BytesLike,\n    previousAdminRole: BytesLike,\n    newAdminRole: BytesLike\n  ];\n  export type OutputTuple = [\n    role: string,\n    previousAdminRole: string,\n    newAdminRole: string\n  ];\n  export interface OutputObject {\n    role: string;\n    previousAdminRole: string;\n    newAdminRole: string;\n  }\n  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;\n  export type Filter = TypedDeferredTopicFilter<Event>;\n  export type Log = TypedEventLog<Event>;\n  export type LogDescription = TypedLogDescription<Event>;\n}\n\nexport namespace RoleGrantedEvent {\n  export type InputTuple = [\n    role: BytesLike,\n    account: AddressLike,\n    sender: AddressLike\n  ];\n  export type OutputTuple = [role: string, account: string, sender: string];\n  export interface OutputObject {\n    role: string;\n    account: string;\n    sender: string;\n  }\n  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;\n  export type Filter = TypedDeferredTopicFilter<Event>;\n  export type Log = TypedEventLog<Event>;\n  export type LogDescription = TypedLogDescription<Event>;\n}\n\nexport namespace RoleRevokedEvent {\n  export type InputTuple = [\n    role: BytesLike,\n    account: AddressLike,\n    sender: AddressLike\n  ];\n  export type OutputTuple = [role: string, account: string, sender: string];\n  export interface OutputObject {\n    role: string;\n    account: string;\n    sender: string;\n  }\n  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;\n  export type Filter = TypedDeferredTopicFilter<Event>;\n  export type Log = TypedEventLog<Event>;\n  export type LogDescription = TypedLogDescription<Event>;\n}\n\nexport interface MetaCore extends BaseContract {\n  connect(runner?: ContractRunner | null): MetaCore;\n  waitForDeployment(): Promise<this>;\n\n  interface: MetaCoreInterface;\n\n  queryFilter<TCEvent extends TypedContractEvent>(\n    event: TCEvent,\n    fromBlockOrBlockhash?: string | number | undefined,\n    toBlock?: string | number | undefined\n  ): Promise<Array<TypedEventLog<TCEvent>>>;\n  queryFilter<TCEvent extends TypedContractEvent>(\n    filter: TypedDeferredTopicFilter<TCEvent>,\n    fromBlockOrBlockhash?: string | number | undefined,\n    toBlock?: string | number | undefined\n  ): Promise<Array<TypedEventLog<TCEvent>>>;\n\n  on<TCEvent extends TypedContractEvent>(\n    event: TCEvent,\n    listener: TypedListener<TCEvent>\n  ): Promise<this>;\n  on<TCEvent extends TypedContractEvent>(\n    filter: TypedDeferredTopicFilter<TCEvent>,\n    listener: TypedListener<TCEvent>\n  ): Promise<this>;\n\n  once<TCEvent extends TypedContractEvent>(\n    event: TCEvent,\n    listener: TypedListener<TCEvent>\n  ): Promise<this>;\n  once<TCEvent extends TypedContractEvent>(\n    filter: TypedDeferredTopicFilter<TCEvent>,\n    listener: TypedListener<TCEvent>\n  ): Promise<this>;\n\n  listeners<TCEvent extends TypedContractEvent>(\n    event: TCEvent\n  ): Promise<Array<TypedListener<TCEvent>>>;\n  listeners(eventName?: string): Promise<Array<Listener>>;\n  removeAllListeners<TCEvent extends TypedContractEvent>(\n    event?: TCEvent\n  ): Promise<this>;\n\n  DEFAULT_ADMIN_ROLE: TypedContractMethod<[], [string], \"view\">;\n\n  adminChangeHashKey: TypedContractMethod<\n    [id: BigNumberish, newHashKey: BytesLike],\n    [void],\n    \"nonpayable\"\n  >;\n\n  adminChangeIdAddress: TypedContractMethod<\n    [id: BigNumberish, newAddress: AddressLike],\n    [void],\n    \"nonpayable\"\n  >;\n\n  adminSetAlias: TypedContractMethod<\n    [id: BigNumberish, al: string],\n    [void],\n    \"nonpayable\"\n  >;\n\n  adminSetNextId: TypedContractMethod<[id: BigNumberish], [void], \"nonpayable\">;\n\n  adminSetUserAddress: TypedContractMethod<\n    [id: BigNumberish, addr: AddressLike],\n    [void],\n    \"nonpayable\"\n  >;\n\n  adminSetUserReferrer: TypedContractMethod<\n    [id: BigNumberish, referrerId: BigNumberish],\n    [void],\n    \"nonpayable\"\n  >;\n\n  adminSetUserRegistrationDate: TypedContractMethod<\n    [id: BigNumberish, registrationDate: BigNumberish],\n    [void],\n    \"nonpayable\"\n  >;\n\n  changeHashKey: TypedContractMethod<\n    [seed: string[], id: BigNumberish, newHashKey: BytesLike],\n    [void],\n    \"nonpayable\"\n  >;\n\n  changeIdAddress: TypedContractMethod<\n    [newAddress: AddressLike],\n    [void],\n    \"nonpayable\"\n  >;\n\n  checkRegistration: TypedContractMethod<\n    [userAddress: AddressLike],\n    [bigint],\n    \"view\"\n  >;\n\n  getAlias: TypedContractMethod<[id: BigNumberish], [string], \"view\">;\n\n  getAllowAdminControl: TypedContractMethod<\n    [id: BigNumberish],\n    [boolean],\n    \"view\"\n  >;\n\n  getHashKey: TypedContractMethod<[id: BigNumberish], [string], \"view\">;\n\n  getPaymentChannelAddress: TypedContractMethod<[], [string], \"view\">;\n\n  getReferralAmount: TypedContractMethod<[id: BigNumberish], [bigint], \"view\">;\n\n  getReferralPage: TypedContractMethod<\n    [\n      id: BigNumberish,\n      amountElementsOnPage: BigNumberish,\n      pageNumber: BigNumberish\n    ],\n    [bigint[]],\n    \"view\"\n  >;\n\n  getReferrer: TypedContractMethod<[id: BigNumberish], [bigint], \"view\">;\n\n  getReferrers: TypedContractMethod<\n    [id: BigNumberish, amount: BigNumberish],\n    [bigint[]],\n    \"view\"\n  >;\n\n  getRegistrationDate: TypedContractMethod<\n    [id: BigNumberish],\n    [bigint],\n    \"view\"\n  >;\n\n  getRoleAdmin: TypedContractMethod<[role: BytesLike], [string], \"view\">;\n\n  getUserAddress: TypedContractMethod<[id: BigNumberish], [string], \"view\">;\n\n  getUserId: TypedContractMethod<[arg0: AddressLike], [bigint], \"view\">;\n\n  getUserIdByAlias: TypedContractMethod<[arg0: string], [bigint], \"view\">;\n\n  grantRole: TypedContractMethod<\n    [role: BytesLike, account: AddressLike],\n    [void],\n    \"nonpayable\"\n  >;\n\n  hasRole: TypedContractMethod<\n    [role: BytesLike, account: AddressLike],\n    [boolean],\n    \"view\"\n  >;\n\n  initialize: TypedContractMethod<[_root: AddressLike], [void], \"nonpayable\">;\n\n  nextId: TypedContractMethod<[], [bigint], \"view\">;\n\n  \"registration(uint256)\": TypedContractMethod<\n    [referrerId: BigNumberish],\n    [bigint],\n    \"nonpayable\"\n  >;\n\n  \"registration(address[],uint256[],uint256[])\": TypedContractMethod<\n    [addresses: AddressLike[], ids: BigNumberish[], referrers: BigNumberish[]],\n    [void],\n    \"nonpayable\"\n  >;\n\n  renounceRole: TypedContractMethod<\n    [role: BytesLike, account: AddressLike],\n    [void],\n    \"nonpayable\"\n  >;\n\n  retrieveMyIdAddress: TypedContractMethod<\n    [seed: string[], id: BigNumberish],\n    [void],\n    \"nonpayable\"\n  >;\n\n  revokeRole: TypedContractMethod<\n    [role: BytesLike, account: AddressLike],\n    [void],\n    \"nonpayable\"\n  >;\n\n  root: TypedContractMethod<[], [string], \"view\">;\n\n  setAlias: TypedContractMethod<\n    [id: BigNumberish, al: string],\n    [void],\n    \"nonpayable\"\n  >;\n\n  setAllowAdminControl: TypedContractMethod<\n    [allowance: boolean],\n    [void],\n    \"nonpayable\"\n  >;\n\n  setHashKey: TypedContractMethod<\n    [newHashKey: BytesLike],\n    [void],\n    \"nonpayable\"\n  >;\n\n  setPaymentChannelAddress: TypedContractMethod<\n    [newAddress: AddressLike],\n    [void],\n    \"nonpayable\"\n  >;\n\n  supportsInterface: TypedContractMethod<\n    [interfaceId: BytesLike],\n    [boolean],\n    \"view\"\n  >;\n\n  getFunction<T extends ContractMethod = ContractMethod>(\n    key: string | FunctionFragment\n  ): T;\n\n  getFunction(\n    nameOrSignature: \"DEFAULT_ADMIN_ROLE\"\n  ): TypedContractMethod<[], [string], \"view\">;\n  getFunction(\n    nameOrSignature: \"adminChangeHashKey\"\n  ): TypedContractMethod<\n    [id: BigNumberish, newHashKey: BytesLike],\n    [void],\n    \"nonpayable\"\n  >;\n  getFunction(\n    nameOrSignature: \"adminChangeIdAddress\"\n  ): TypedContractMethod<\n    [id: BigNumberish, newAddress: AddressLike],\n    [void],\n    \"nonpayable\"\n  >;\n  getFunction(\n    nameOrSignature: \"adminSetAlias\"\n  ): TypedContractMethod<[id: BigNumberish, al: string], [void], \"nonpayable\">;\n  getFunction(\n    nameOrSignature: \"adminSetNextId\"\n  ): TypedContractMethod<[id: BigNumberish], [void], \"nonpayable\">;\n  getFunction(\n    nameOrSignature: \"adminSetUserAddress\"\n  ): TypedContractMethod<\n    [id: BigNumberish, addr: AddressLike],\n    [void],\n    \"nonpayable\"\n  >;\n  getFunction(\n    nameOrSignature: \"adminSetUserReferrer\"\n  ): TypedContractMethod<\n    [id: BigNumberish, referrerId: BigNumberish],\n    [void],\n    \"nonpayable\"\n  >;\n  getFunction(\n    nameOrSignature: \"adminSetUserRegistrationDate\"\n  ): TypedContractMethod<\n    [id: BigNumberish, registrationDate: BigNumberish],\n    [void],\n    \"nonpayable\"\n  >;\n  getFunction(\n    nameOrSignature: \"changeHashKey\"\n  ): TypedContractMethod<\n    [seed: string[], id: BigNumberish, newHashKey: BytesLike],\n    [void],\n    \"nonpayable\"\n  >;\n  getFunction(\n    nameOrSignature: \"changeIdAddress\"\n  ): TypedContractMethod<[newAddress: AddressLike], [void], \"nonpayable\">;\n  getFunction(\n    nameOrSignature: \"checkRegistration\"\n  ): TypedContractMethod<[userAddress: AddressLike], [bigint], \"view\">;\n  getFunction(\n    nameOrSignature: \"getAlias\"\n  ): TypedContractMethod<[id: BigNumberish], [string], \"view\">;\n  getFunction(\n    nameOrSignature: \"getAllowAdminControl\"\n  ): TypedContractMethod<[id: BigNumberish], [boolean], \"view\">;\n  getFunction(\n    nameOrSignature: \"getHashKey\"\n  ): TypedContractMethod<[id: BigNumberish], [string], \"view\">;\n  getFunction(\n    nameOrSignature: \"getPaymentChannelAddress\"\n  ): TypedContractMethod<[], [string], \"view\">;\n  getFunction(\n    nameOrSignature: \"getReferralAmount\"\n  ): TypedContractMethod<[id: BigNumberish], [bigint], \"view\">;\n  getFunction(\n    nameOrSignature: \"getReferralPage\"\n  ): TypedContractMethod<\n    [\n      id: BigNumberish,\n      amountElementsOnPage: BigNumberish,\n      pageNumber: BigNumberish\n    ],\n    [bigint[]],\n    \"view\"\n  >;\n  getFunction(\n    nameOrSignature: \"getReferrer\"\n  ): TypedContractMethod<[id: BigNumberish], [bigint], \"view\">;\n  getFunction(\n    nameOrSignature: \"getReferrers\"\n  ): TypedContractMethod<\n    [id: BigNumberish, amount: BigNumberish],\n    [bigint[]],\n    \"view\"\n  >;\n  getFunction(\n    nameOrSignature: \"getRegistrationDate\"\n  ): TypedContractMethod<[id: BigNumberish], [bigint], \"view\">;\n  getFunction(\n    nameOrSignature: \"getRoleAdmin\"\n  ): TypedContractMethod<[role: BytesLike], [string], \"view\">;\n  getFunction(\n    nameOrSignature: \"getUserAddress\"\n  ): TypedContractMethod<[id: BigNumberish], [string], \"view\">;\n  getFunction(\n    nameOrSignature: \"getUserId\"\n  ): TypedContractMethod<[arg0: AddressLike], [bigint], \"view\">;\n  getFunction(\n    nameOrSignature: \"getUserIdByAlias\"\n  ): TypedContractMethod<[arg0: string], [bigint], \"view\">;\n  getFunction(\n    nameOrSignature: \"grantRole\"\n  ): TypedContractMethod<\n    [role: BytesLike, account: AddressLike],\n    [void],\n    \"nonpayable\"\n  >;\n  getFunction(\n    nameOrSignature: \"hasRole\"\n  ): TypedContractMethod<\n    [role: BytesLike, account: AddressLike],\n    [boolean],\n    \"view\"\n  >;\n  getFunction(\n    nameOrSignature: \"initialize\"\n  ): TypedContractMethod<[_root: AddressLike], [void], \"nonpayable\">;\n  getFunction(\n    nameOrSignature: \"nextId\"\n  ): TypedContractMethod<[], [bigint], \"view\">;\n  getFunction(\n    nameOrSignature: \"registration(uint256)\"\n  ): TypedContractMethod<[referrerId: BigNumberish], [bigint], \"nonpayable\">;\n  getFunction(\n    nameOrSignature: \"registration(address[],uint256[],uint256[])\"\n  ): TypedContractMethod<\n    [addresses: AddressLike[], ids: BigNumberish[], referrers: BigNumberish[]],\n    [void],\n    \"nonpayable\"\n  >;\n  getFunction(\n    nameOrSignature: \"renounceRole\"\n  ): TypedContractMethod<\n    [role: BytesLike, account: AddressLike],\n    [void],\n    \"nonpayable\"\n  >;\n  getFunction(\n    nameOrSignature: \"retrieveMyIdAddress\"\n  ): TypedContractMethod<\n    [seed: string[], id: BigNumberish],\n    [void],\n    \"nonpayable\"\n  >;\n  getFunction(\n    nameOrSignature: \"revokeRole\"\n  ): TypedContractMethod<\n    [role: BytesLike, account: AddressLike],\n    [void],\n    \"nonpayable\"\n  >;\n  getFunction(\n    nameOrSignature: \"root\"\n  ): TypedContractMethod<[], [string], \"view\">;\n  getFunction(\n    nameOrSignature: \"setAlias\"\n  ): TypedContractMethod<[id: BigNumberish, al: string], [void], \"nonpayable\">;\n  getFunction(\n    nameOrSignature: \"setAllowAdminControl\"\n  ): TypedContractMethod<[allowance: boolean], [void], \"nonpayable\">;\n  getFunction(\n    nameOrSignature: \"setHashKey\"\n  ): TypedContractMethod<[newHashKey: BytesLike], [void], \"nonpayable\">;\n  getFunction(\n    nameOrSignature: \"setPaymentChannelAddress\"\n  ): TypedContractMethod<[newAddress: AddressLike], [void], \"nonpayable\">;\n  getFunction(\n    nameOrSignature: \"supportsInterface\"\n  ): TypedContractMethod<[interfaceId: BytesLike], [boolean], \"view\">;\n\n  getEvent(\n    key: \"AccountTransfer\"\n  ): TypedContractEvent<\n    AccountTransferEvent.InputTuple,\n    AccountTransferEvent.OutputTuple,\n    AccountTransferEvent.OutputObject\n  >;\n  getEvent(\n    key: \"AccountUpdateAlias\"\n  ): TypedContractEvent<\n    AccountUpdateAliasEvent.InputTuple,\n    AccountUpdateAliasEvent.OutputTuple,\n    AccountUpdateAliasEvent.OutputObject\n  >;\n  getEvent(\n    key: \"AccountUpdateHashKey\"\n  ): TypedContractEvent<\n    AccountUpdateHashKeyEvent.InputTuple,\n    AccountUpdateHashKeyEvent.OutputTuple,\n    AccountUpdateHashKeyEvent.OutputObject\n  >;\n  getEvent(\n    key: \"Initialized\"\n  ): TypedContractEvent<\n    InitializedEvent.InputTuple,\n    InitializedEvent.OutputTuple,\n    InitializedEvent.OutputObject\n  >;\n  getEvent(\n    key: \"Registration\"\n  ): TypedContractEvent<\n    RegistrationEvent.InputTuple,\n    RegistrationEvent.OutputTuple,\n    RegistrationEvent.OutputObject\n  >;\n  getEvent(\n    key: \"RoleAdminChanged\"\n  ): TypedContractEvent<\n    RoleAdminChangedEvent.InputTuple,\n    RoleAdminChangedEvent.OutputTuple,\n    RoleAdminChangedEvent.OutputObject\n  >;\n  getEvent(\n    key: \"RoleGranted\"\n  ): TypedContractEvent<\n    RoleGrantedEvent.InputTuple,\n    RoleGrantedEvent.OutputTuple,\n    RoleGrantedEvent.OutputObject\n  >;\n  getEvent(\n    key: \"RoleRevoked\"\n  ): TypedContractEvent<\n    RoleRevokedEvent.InputTuple,\n    RoleRevokedEvent.OutputTuple,\n    RoleRevokedEvent.OutputObject\n  >;\n\n  filters: {\n    \"AccountTransfer(address,address,uint256)\": TypedContractEvent<\n      AccountTransferEvent.InputTuple,\n      AccountTransferEvent.OutputTuple,\n      AccountTransferEvent.OutputObject\n    >;\n    AccountTransfer: TypedContractEvent<\n      AccountTransferEvent.InputTuple,\n      AccountTransferEvent.OutputTuple,\n      AccountTransferEvent.OutputObject\n    >;\n\n    \"AccountUpdateAlias(uint256,string)\": TypedContractEvent<\n      AccountUpdateAliasEvent.InputTuple,\n      AccountUpdateAliasEvent.OutputTuple,\n      AccountUpdateAliasEvent.OutputObject\n    >;\n    AccountUpdateAlias: TypedContractEvent<\n      AccountUpdateAliasEvent.InputTuple,\n      AccountUpdateAliasEvent.OutputTuple,\n      AccountUpdateAliasEvent.OutputObject\n    >;\n\n    \"AccountUpdateHashKey(uint256,bytes32)\": TypedContractEvent<\n      AccountUpdateHashKeyEvent.InputTuple,\n      AccountUpdateHashKeyEvent.OutputTuple,\n      AccountUpdateHashKeyEvent.OutputObject\n    >;\n    AccountUpdateHashKey: TypedContractEvent<\n      AccountUpdateHashKeyEvent.InputTuple,\n      AccountUpdateHashKeyEvent.OutputTuple,\n      AccountUpdateHashKeyEvent.OutputObject\n    >;\n\n    \"Initialized(uint8)\": TypedContractEvent<\n      InitializedEvent.InputTuple,\n      InitializedEvent.OutputTuple,\n      InitializedEvent.OutputObject\n    >;\n    Initialized: TypedContractEvent<\n      InitializedEvent.InputTuple,\n      InitializedEvent.OutputTuple,\n      InitializedEvent.OutputObject\n    >;\n\n    \"Registration(address,uint256,uint256,uint256)\": TypedContractEvent<\n      RegistrationEvent.InputTuple,\n      RegistrationEvent.OutputTuple,\n      RegistrationEvent.OutputObject\n    >;\n    Registration: TypedContractEvent<\n      RegistrationEvent.InputTuple,\n      RegistrationEvent.OutputTuple,\n      RegistrationEvent.OutputObject\n    >;\n\n    \"RoleAdminChanged(bytes32,bytes32,bytes32)\": TypedContractEvent<\n      RoleAdminChangedEvent.InputTuple,\n      RoleAdminChangedEvent.OutputTuple,\n      RoleAdminChangedEvent.OutputObject\n    >;\n    RoleAdminChanged: TypedContractEvent<\n      RoleAdminChangedEvent.InputTuple,\n      RoleAdminChangedEvent.OutputTuple,\n      RoleAdminChangedEvent.OutputObject\n    >;\n\n    \"RoleGranted(bytes32,address,address)\": TypedContractEvent<\n      RoleGrantedEvent.InputTuple,\n      RoleGrantedEvent.OutputTuple,\n      RoleGrantedEvent.OutputObject\n    >;\n    RoleGranted: TypedContractEvent<\n      RoleGrantedEvent.InputTuple,\n      RoleGrantedEvent.OutputTuple,\n      RoleGrantedEvent.OutputObject\n    >;\n\n    \"RoleRevoked(bytes32,address,address)\": TypedContractEvent<\n      RoleRevokedEvent.InputTuple,\n      RoleRevokedEvent.OutputTuple,\n      RoleRevokedEvent.OutputObject\n    >;\n    RoleRevoked: TypedContractEvent<\n      RoleRevokedEvent.InputTuple,\n      RoleRevokedEvent.OutputTuple,\n      RoleRevokedEvent.OutputObject\n    >;\n  };\n}\n"]}